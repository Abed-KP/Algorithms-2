/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
      int carry = 0;
      ListNode l3 = new ListNode(-1);
      ListNode dummy = l3;
      int n1;
      int n2;
      int sum;
        
        while (l1 != null || l2 != null){   
            n1 = l1 == null? 0: l1.val;
            n2 = l2 == null? 0: l2.val;
            sum = (n1 + n2 + carry) % 10;
            carry = (n1 + n2 + carry) >= 10? 1:0;
            dummy.next = new ListNode(sum);
            dummy = dummy.next;
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;                
            }
   
        if (carry > 0)  dummy.next = new ListNode(1);
        return l3.next;
}   
}


***************************************************************************

I learned again, the improtance of being able to know how too add, elementary style, through code. So the sum is 

(x = y + carry ) % 10, and if that number is >= 10, then the carry becomes 1. Don't forget to add carry after the loop.

Also, the importance of using a dummy node when messing with lists. 
