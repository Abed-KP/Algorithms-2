class Solution {
    public int reverse(int x) {
        
        int rev = 0;
        while (x != 0){
            
        int temp = rev;   
        int pop = x % 10;        
        rev = rev * 10 + pop;
        x /= 10;          
        if ((rev - pop) / 10 != temp)  return 0;
            
        }        
        return rev;        
    }
}


******************************************

I learned that taking the Mod 10 of x, gives us the least significant digit, the dividing x by 10 each time, ensure that

we can keep getting to the next least significant digit every iteration.  Also, I learned that in computers, taking

the mod of a negative numbeer will always yield a negative answer. 

Also learned that when doing incrementive operations, you can check for overflow by comparing the last result to
the new result. If they are not equal, then there was overflow. 