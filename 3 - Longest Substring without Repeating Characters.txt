public class Solution {
    public int lengthOfLongestSubstring(String s) {
     
        int i = 0, j = 0, max = 0;
        HashSet<Character> seen = new HashSet();	I learned the "Sliding window approach." You can work with two
        						pointers, and move each seperatly to calculate a specific "Max."
        while ( j < s.length()){
            
            if(!seen.contains(s.charAt(j))){
                
                seen.add(s.charAt(j));
                j++;
                max = Math.max(max, j - i);
            
            }
            else {
               seen.remove(s.charAt(i));
                i++;
            }
                
        }
        return max;
    }
}